import { AfterViewInit, ElementRef, EventEmitter, NgZone, OnDestroy, Renderer2 } from '@angular/core';
import { TreeDraggedElement } from '../models/tree-dragged-element.model';
import * as ɵngcc0 from '@angular/core';
export declare class TreeDropDirective implements AfterViewInit, OnDestroy {
    private el;
    private renderer;
    private treeDraggedElement;
    private ngZone;
    allowDragoverStyling: boolean;
    onDropCallback: EventEmitter<any>;
    onDragOverCallback: EventEmitter<any>;
    onDragLeaveCallback: EventEmitter<any>;
    onDragEnterCallback: EventEmitter<any>;
    private readonly dragOverEventHandler;
    private readonly dragEnterEventHandler;
    private readonly dragLeaveEventHandler;
    private _allowDrop;
    treeAllowDrop: any;
    allowDrop($event: any): boolean;
    constructor(el: ElementRef, renderer: Renderer2, treeDraggedElement: TreeDraggedElement, ngZone: NgZone);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    onDragOver($event: any): void;
    onDragEnter($event: any): void;
    onDragLeave($event: any): void;
    onDrop($event: any): void;
    private addClass;
    private removeClass;
    private addDisabledClass;
    private removeDisabledClass;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TreeDropDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<TreeDropDirective, "[treeDrop]", never, { "allowDragoverStyling": "allowDragoverStyling"; "treeAllowDrop": "treeAllowDrop"; }, { "onDropCallback": "treeDrop"; "onDragOverCallback": "treeDropDragOver"; "onDragLeaveCallback": "treeDropDragLeave"; "onDragEnterCallback": "treeDropDragEnter"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1kcm9wLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJ0cmVlLWRyb3AuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBOZ1pvbmUsIE9uRGVzdHJveSwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUcmVlRHJhZ2dlZEVsZW1lbnQgfSBmcm9tICcuLi9tb2RlbHMvdHJlZS1kcmFnZ2VkLWVsZW1lbnQubW9kZWwnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVHJlZURyb3BEaXJlY3RpdmUgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgZWw7XG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcbiAgICBwcml2YXRlIHRyZWVEcmFnZ2VkRWxlbWVudDtcbiAgICBwcml2YXRlIG5nWm9uZTtcbiAgICBhbGxvd0RyYWdvdmVyU3R5bGluZzogYm9vbGVhbjtcbiAgICBvbkRyb3BDYWxsYmFjazogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25EcmFnT3ZlckNhbGxiYWNrOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkRyYWdMZWF2ZUNhbGxiYWNrOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkRyYWdFbnRlckNhbGxiYWNrOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBwcml2YXRlIHJlYWRvbmx5IGRyYWdPdmVyRXZlbnRIYW5kbGVyO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgZHJhZ0VudGVyRXZlbnRIYW5kbGVyO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgZHJhZ0xlYXZlRXZlbnRIYW5kbGVyO1xuICAgIHByaXZhdGUgX2FsbG93RHJvcDtcbiAgICB0cmVlQWxsb3dEcm9wOiBhbnk7XG4gICAgYWxsb3dEcm9wKCRldmVudDogYW55KTogYm9vbGVhbjtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgdHJlZURyYWdnZWRFbGVtZW50OiBUcmVlRHJhZ2dlZEVsZW1lbnQsIG5nWm9uZTogTmdab25lKTtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIG9uRHJhZ092ZXIoJGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIG9uRHJhZ0VudGVyKCRldmVudDogYW55KTogdm9pZDtcbiAgICBvbkRyYWdMZWF2ZSgkZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25Ecm9wKCRldmVudDogYW55KTogdm9pZDtcbiAgICBwcml2YXRlIGFkZENsYXNzO1xuICAgIHByaXZhdGUgcmVtb3ZlQ2xhc3M7XG4gICAgcHJpdmF0ZSBhZGREaXNhYmxlZENsYXNzO1xuICAgIHByaXZhdGUgcmVtb3ZlRGlzYWJsZWRDbGFzcztcbn1cbiJdfQ==